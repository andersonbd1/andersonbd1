# $ vagrant box add ubuntu http://cloud-images.ubuntu.com/vagrant/raring/current/raring-server-cloudimg-amd64-vagrant-disk1.box
# $ sudo apt-get update; sudo apt-get -y install ubuntu-gnome-desktop

# -*- mode: ruby -*-
# vi: set ft=ruby :
#

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|

  # https://github.com/dotless-de/vagrant-vbguest
  config.vbguest.auto_update = false

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  #config.vm.network "forwarded_port", guest: 22, host: 8092
  #config.vm.network "forwarded_port", guest: 80, host: 8091
  #config.vm.network "forwarded_port", guest: 8000, host: 8000
  #config.vm.network "forwarded_port", guest: 3000, host: 3000
  #config.vm.network "forwarded_port", guest: 3001, host: 3001
  config.vm.network "forwarded_port", guest: 5432, host: 5432
  config.vm.network "forwarded_port", guest: 8081, host: 8081
  config.vm.network "forwarded_port", guest: 22, host: 2223
  config.vm.network "forwarded_port", guest: 22, host: 2224
  config.vm.network "forwarded_port", guest: 8090, host: 8090

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  # TODO: for some reason, I can't seem to map the root c drive, so I'm doing 
  # it relatively and one up

  config.vm.synced_folder "e:/dev", "/mydev", nfs: true
  #config.vm.synced_folder "e:/google_drive", "/old_google_drive", nfs: true
  config.vm.synced_folder "c:/Users", "/windows_users", nfs: true
  config.vm.synced_folder "E:/e", "/windows_e", nfs: true
  config.vm.synced_folder "G:/My\ Drive", "/google_drive", nfs: true
  config.vm.synced_folder "E:/audio", "/myaudio", nfs: true
  #config.vm.synced_folder "C:/Users/Ben\ Anderson/Dropbox", "/mydropbox", nfs: true
  config.vm.boot_timeout = 60

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
     vb.name = "andersonbd1-ubuntu7"
  #  # Display the VirtualBox GUI when booting the machine
     #vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
     vb.memory = 3072
     vb.cpus = 2
     #vb.customize ["modifyvm", :id, "--vram", "74"]
     #vb.customize ["modifyvm", :id, "--graphicscontroller", "vboxvga"]
     #vb.customize ["modifyvm", :id, "--ioapic", "on"]
     #vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
     #vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
     #vb.customize ["modifyvm", :id, "--mouse", "usb"]
     # vb.customize ["modifyvm", :id, "--audio", "oss"]
     #vb.customize ["modifyvm", :id, '--audio', 'dsound', '--audiocontroller', 'sb16']
     # none|null|dsound
     # ac97|hda|sb16
     #combos tried 
     # dsound - hda
     # null - ac97
     # dsound - ac97
     # dsound - sb16
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline <<-SHELL
  #   sudo apt-get install apache2
  # SHELL

  #config.vm.provision "file", source: "~/.gitconfig", destination: ".gitconfig"

  config.vm.provision "shell", inline: "/vagrant/installation_scripts/captureoutput.sh"

  config.ssh.forward_agent = true
  #config.ssh.forward_x11 = true
  #config.ssh.username = "vagrant"
  #config.ssh.password = "vagrant"
  #config.ssh.private_key_path = "C:/Users/Ben Anderson/.ssh/id_rsa"

end
